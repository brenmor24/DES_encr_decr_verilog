module text_encryption(
input clk,
input rst,
input user_input_button
/*output reg [31:0] captured_data*/);


//

endmodule

/*
Total time spent: 4.5 hours

Design:
	1) 64-bit encryption key that we will get by flipping on 16 switches x 4 times
		- ALWAYS give the user the ability to go back and edit each bit in 1 of the 4 cycles
		- Do this by having 4 different states in the FSM
		- They only progress to the next state after all 16 bits in the cycle have been entered in AND the button has been pushed to confirm the cycle
	2) 64-bit input for encryption that we will get by flipping on 16 switches x 4 times
	3) Store the encrypted value in on-chip memory (register?)
	4) Display the 4 16-bit hex digits on the 7-seg display
	5) Have the user put in the same encryption key as before and then the output from the 7-seg display
	6) Output the decrypted value
		- THIS SHOULD BE THE SAME AS THE INPUT VALUE FROM STEP 2!

*/